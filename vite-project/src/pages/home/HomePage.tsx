import { useFavoritesStore } from '@/app/store/useFavoritesStore';
import { useFiltersStore } from '@/app/store/useFiltersStore';
import { FiltersPanel } from '@/widgets/filters/FiltersPanel';
import { ListingCard } from '../../entities/listing/ui/ListingCard';
import { useQuery } from '@tanstack/react-query';
import { listingsApi } from '../../shared/api/ListingsApi';
import { useEffect, useState } from 'react';

export default function HomePage() {
  const { city, minPrice, maxPrice, minRating, sort, reset } = useFiltersStore();
  const { favorites, toggleFavorite, loadFavorites, showOnlyFavorites } = useFavoritesStore();
  const [sortFavorites, setSortFavorites] = useState(false);

  useEffect(() => {
    loadFavorites();
  }, [loadFavorites]);

  const { data, isLoading, isError, refetch } = useQuery({
    queryKey: ['listings', city, minPrice, maxPrice, minRating, sort],
    queryFn: () =>
      listingsApi.getListings({
        city,
        minPrice,
        maxPrice,
        minRating,
        sort: sort || undefined,
      }),
  });

  const handleReset = () => {
    reset();   // —Å–±—Ä–æ—Å Zustand —Ñ–∏–ª—å—Ç—Ä–æ–≤
    setSortFavorites(false); // —Å–±—Ä–æ—Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ª—é–±–∏–º—ã—Ö
    refetch(); // –ø–µ—Ä–µ–∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
  };

  if (isLoading) return <p className='p-4'>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (isError) return <p className='p-4 text-red-500'>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</p>;

  // 1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ ¬´—Å–Ω–∞—á–∞–ª–∞ –ª—é–±–∏–º—ã–µ¬ª (–Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç –Ω–µ –ª—é–±–∏–º—ã–µ)
  let displayedData = data || [];
  if (sortFavorites) {
    displayedData = [...displayedData].sort((a, b) => {
      const aFav = favorites.includes(a.id) ? 0 : 1;
      const bFav = favorites.includes(b.id) ? 0 : 1;
      return aFav - bFav;
    });
  }

  // 2Ô∏è‚É£ –§–∏–ª—å—Ç—Ä ¬´—Ç–æ–ª—å–∫–æ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ¬ª
  if (showOnlyFavorites) {
    displayedData = displayedData.filter((listing) => favorites.includes(listing.id));
  }

  if (!displayedData.length) {
    return (
      <div className='text-center p-10 text-gray-500'>
        <p className='text-lg mb-2'>üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
        <p>–ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å –ø–æ–∏—Å–∫.</p>
        <button
          onClick={handleReset}
          className='mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600'
        >
          –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
        </button>
      </div>
    );
  }

  return (
    <div>
      <FiltersPanel/>

      <div className='grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 p-4'>
        {displayedData.map((listing, index) => (
          <ListingCard
            key={`${listing.id}-${index}`}
            listing={listing}
            isFavorite={favorites.includes(listing.id)}
            onFavoriteToggle={toggleFavorite}
          />
        ))}
      </div>
    </div>
  );
}
